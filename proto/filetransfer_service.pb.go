// Code generated by protoc-gen-go. DO NOT EDIT.
// source: filetransfer_service.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	filetransfer_service.proto

It has these top-level messages:
	ListRequestType
	ListResponseType
	DownloadRequestType
	DownloadResponseType
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type ListRequestType struct {
}

func (m *ListRequestType) Reset()                    { *m = ListRequestType{} }
func (m *ListRequestType) String() string            { return proto1.CompactTextString(m) }
func (*ListRequestType) ProtoMessage()               {}
func (*ListRequestType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ListResponseType struct {
	Name    string                     `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Size    int64                      `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Mode    uint32                     `protobuf:"varint,3,opt,name=mode" json:"mode,omitempty"`
	ModTime *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=modTime" json:"modTime,omitempty"`
}

func (m *ListResponseType) Reset()                    { *m = ListResponseType{} }
func (m *ListResponseType) String() string            { return proto1.CompactTextString(m) }
func (*ListResponseType) ProtoMessage()               {}
func (*ListResponseType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListResponseType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListResponseType) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ListResponseType) GetMode() uint32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *ListResponseType) GetModTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.ModTime
	}
	return nil
}

type DownloadRequestType struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *DownloadRequestType) Reset()                    { *m = DownloadRequestType{} }
func (m *DownloadRequestType) String() string            { return proto1.CompactTextString(m) }
func (*DownloadRequestType) ProtoMessage()               {}
func (*DownloadRequestType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DownloadRequestType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DownloadResponseType struct {
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (m *DownloadResponseType) Reset()                    { *m = DownloadResponseType{} }
func (m *DownloadResponseType) String() string            { return proto1.CompactTextString(m) }
func (*DownloadResponseType) ProtoMessage()               {}
func (*DownloadResponseType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DownloadResponseType) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto1.RegisterType((*ListRequestType)(nil), "proto.ListRequestType")
	proto1.RegisterType((*ListResponseType)(nil), "proto.ListResponseType")
	proto1.RegisterType((*DownloadRequestType)(nil), "proto.DownloadRequestType")
	proto1.RegisterType((*DownloadResponseType)(nil), "proto.DownloadResponseType")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for FileTransferService service

type FileTransferServiceClient interface {
	ListFiles(ctx context.Context, in *ListRequestType, opts ...grpc.CallOption) (FileTransferService_ListFilesClient, error)
	Download(ctx context.Context, in *DownloadRequestType, opts ...grpc.CallOption) (FileTransferService_DownloadClient, error)
}

type fileTransferServiceClient struct {
	cc *grpc.ClientConn
}

func NewFileTransferServiceClient(cc *grpc.ClientConn) FileTransferServiceClient {
	return &fileTransferServiceClient{cc}
}

func (c *fileTransferServiceClient) ListFiles(ctx context.Context, in *ListRequestType, opts ...grpc.CallOption) (FileTransferService_ListFilesClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_FileTransferService_serviceDesc.Streams[0], c.cc, "/proto.FileTransferService/ListFiles", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileTransferServiceListFilesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileTransferService_ListFilesClient interface {
	Recv() (*ListResponseType, error)
	grpc.ClientStream
}

type fileTransferServiceListFilesClient struct {
	grpc.ClientStream
}

func (x *fileTransferServiceListFilesClient) Recv() (*ListResponseType, error) {
	m := new(ListResponseType)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *fileTransferServiceClient) Download(ctx context.Context, in *DownloadRequestType, opts ...grpc.CallOption) (FileTransferService_DownloadClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_FileTransferService_serviceDesc.Streams[1], c.cc, "/proto.FileTransferService/Download", opts...)
	if err != nil {
		return nil, err
	}
	x := &fileTransferServiceDownloadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type FileTransferService_DownloadClient interface {
	Recv() (*DownloadResponseType, error)
	grpc.ClientStream
}

type fileTransferServiceDownloadClient struct {
	grpc.ClientStream
}

func (x *fileTransferServiceDownloadClient) Recv() (*DownloadResponseType, error) {
	m := new(DownloadResponseType)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for FileTransferService service

type FileTransferServiceServer interface {
	ListFiles(*ListRequestType, FileTransferService_ListFilesServer) error
	Download(*DownloadRequestType, FileTransferService_DownloadServer) error
}

func RegisterFileTransferServiceServer(s *grpc.Server, srv FileTransferServiceServer) {
	s.RegisterService(&_FileTransferService_serviceDesc, srv)
}

func _FileTransferService_ListFiles_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRequestType)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileTransferServiceServer).ListFiles(m, &fileTransferServiceListFilesServer{stream})
}

type FileTransferService_ListFilesServer interface {
	Send(*ListResponseType) error
	grpc.ServerStream
}

type fileTransferServiceListFilesServer struct {
	grpc.ServerStream
}

func (x *fileTransferServiceListFilesServer) Send(m *ListResponseType) error {
	return x.ServerStream.SendMsg(m)
}

func _FileTransferService_Download_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DownloadRequestType)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(FileTransferServiceServer).Download(m, &fileTransferServiceDownloadServer{stream})
}

type FileTransferService_DownloadServer interface {
	Send(*DownloadResponseType) error
	grpc.ServerStream
}

type fileTransferServiceDownloadServer struct {
	grpc.ServerStream
}

func (x *fileTransferServiceDownloadServer) Send(m *DownloadResponseType) error {
	return x.ServerStream.SendMsg(m)
}

var _FileTransferService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.FileTransferService",
	HandlerType: (*FileTransferServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListFiles",
			Handler:       _FileTransferService_ListFiles_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Download",
			Handler:       _FileTransferService_Download_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "filetransfer_service.proto",
}

func init() { proto1.RegisterFile("filetransfer_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xbf, 0x4e, 0xf3, 0x30,
	0x14, 0xc5, 0x3f, 0x7f, 0x2d, 0x7f, 0x7a, 0x01, 0x01, 0x2e, 0x82, 0xc8, 0x0c, 0x44, 0x99, 0x02,
	0x43, 0x8a, 0x0a, 0x0f, 0xc0, 0x80, 0x60, 0x61, 0x32, 0xd9, 0x91, 0x4b, 0x6e, 0x2a, 0x4b, 0x71,
	0x1c, 0x62, 0x17, 0x04, 0x33, 0x0f, 0xc2, 0xa3, 0x22, 0xdb, 0x8d, 0x4a, 0xa0, 0x93, 0x8f, 0xcf,
	0x3d, 0xb2, 0x7f, 0xf7, 0x00, 0x2b, 0x65, 0x85, 0xb6, 0x15, 0xb5, 0x29, 0xb1, 0x7d, 0x32, 0xd8,
	0xbe, 0xca, 0x67, 0xcc, 0x9a, 0x56, 0x5b, 0x4d, 0x37, 0xfc, 0xc1, 0xce, 0xe6, 0x5a, 0xcf, 0x2b,
	0x9c, 0xf8, 0xdb, 0x6c, 0x51, 0x4e, 0xac, 0x54, 0x68, 0xac, 0x50, 0x4d, 0xc8, 0x25, 0x87, 0xb0,
	0xff, 0x20, 0x8d, 0xe5, 0xf8, 0xb2, 0x40, 0x63, 0xf3, 0xf7, 0x06, 0x93, 0x4f, 0x02, 0x07, 0xc1,
	0x33, 0x8d, 0xae, 0x0d, 0x3a, 0x93, 0x52, 0x18, 0xd6, 0x42, 0x61, 0x44, 0x62, 0x92, 0x8e, 0xb8,
	0xd7, 0xce, 0x33, 0xf2, 0x03, 0xa3, 0xff, 0x31, 0x49, 0x07, 0xdc, 0x6b, 0xe7, 0x29, 0x5d, 0x60,
	0x34, 0x88, 0x49, 0xba, 0xc7, 0xbd, 0xa6, 0xd7, 0xb0, 0xa5, 0x74, 0x91, 0x4b, 0x85, 0xd1, 0x30,
	0x26, 0xe9, 0xce, 0x94, 0x65, 0x01, 0x2b, 0xeb, 0xb0, 0xb2, 0xbc, 0xc3, 0xe2, 0x5d, 0x34, 0x39,
	0x87, 0xf1, 0xad, 0x7e, 0xab, 0x2b, 0x2d, 0x8a, 0x1f, 0x74, 0xeb, 0x40, 0x92, 0x0b, 0x38, 0x5a,
	0x45, 0xfb, 0xd0, 0x85, 0xb0, 0xc2, 0x67, 0x77, 0xb9, 0xd7, 0xd3, 0x2f, 0x02, 0xe3, 0x3b, 0x59,
	0x61, 0xbe, 0xec, 0xed, 0x31, 0xd4, 0x46, 0x6f, 0x60, 0xe4, 0x96, 0x76, 0x23, 0x43, 0x8f, 0x03,
	0x59, 0xf6, 0xab, 0x1a, 0x76, 0xd2, 0xf3, 0x57, 0x3f, 0x25, 0xff, 0x2e, 0x09, 0xbd, 0x87, 0xed,
	0x8e, 0x82, 0xb2, 0x65, 0x70, 0xcd, 0x06, 0xec, 0xf4, 0xcf, 0xac, 0xff, 0xd0, 0x6c, 0xd3, 0xcf,
	0xaf, 0xbe, 0x03, 0x00, 0x00, 0xff, 0xff, 0x05, 0x59, 0x1c, 0xe7, 0xe0, 0x01, 0x00, 0x00,
}
